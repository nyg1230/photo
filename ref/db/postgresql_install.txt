# version		14
# platform		rocky 8
# architecture	x86_64

###
# instll start
###

# Install the repository RPM:
sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm

# Disable the built-in PostgreSQL module:
sudo dnf -qy module disable postgresql

# Install PostgreSQL:
sudo dnf install -y postgresql14-server

# Optionally initialize the database and enable automatic start:
sudo /usr/pgsql-14/bin/postgresql-14-setup initdb
sudo systemctl enable postgresql-14
sudo systemctl start postgresql-14

###
# instll end
###

###
# after install start
###
postgresql-setup --initdb
systemctl enable postgresql.service
systemctl start postgresql.service
###
# after install end
###

###
# setting start
###
service postgresql initdb
chkconfig postgresql on
###
# setting end
###

firewall-cmd --permanent --add-port=5432/tcp

cd /var/lib/pgsql/14/data
# 설정파일
postgresql.conf
    listen_address  : 허용할 ip 주소 / * 일경우 모두 허용
    port            : port 주소 설정 / 기본 5432
    max_connections : 커넥션 최대 허용치
    ** change requires restart 리스너를 재시작해야 설정값이 적용되는 것을 뜻함
pg_hba.conf
    TYPE
        접근자의 접근위치 및 통신의 암호화 관련 설정
        local
            unix domain socket을 통한 접속
        hostssl
            ssl 인증서를 통한 암호화 통신만 지원하고 localhost, 127.0.0.1과 같이 tcp/ip 접속 해당
        hostnossl
            ssl 접속 불가능, tcp/ip 통신 지원
        host 또는 hostssl 설정 상태에서 ssl 기능 사용시 postgres 컴파일시 --with-openssl 옵션 및 postgres.comf에 ssl=true 설정 추가해야함

    DATABASE
        특정 디비에 대한 접속 제한 가능, ','을 사용하여 여러개의 디비 접근 제어 가능
        모든 디비에 대한 접근을 풀려면 all 을 적으면 됨
        디비의 수가 많을 경우 @test.txt 와같이 설정한 후 test.txt를 PGDATA로 설정한 폴더의 안에 넣어두면 됨
    
    USER
        계정설정으로 ','로 구분할 수 있음
        @파일명 과 같이 따로 파일을 만들어 처리가능
        PostgreSQL의 계정 그룹 카탈로그 테이블인 pg_group 또는 create_group 명령으로 그룹을 만들어 계정은 하위(SYSID)에 묶어두었을 때는 '+' 키를 붙인 그룹명으로 설정하면 해당 그룹에 대한 모든 접근이 가능

    ADDRESS
        PIv4 CIDR구분으로 해당 C Class에 대해 모두 접근 처리를 할 경우 : xxx.xxx.xxx.0/24
        해당 IP에 대한 접근처리를 할 경우 : xxx.xxx.xxx.xxx/32

    METHOD
        실제 계정의 패스워드에 대해 서버로 전송을 어떻게 할 것인가를 정함
        trust       : 패스워드 없이 접근 가능
        reject      : 거부
        md5         : 패스워드를 md5로 암호화 전송
        crypt       : crypt로 암호화해서 전송
        krb4 / krb5 : kerberOS V4,5 지원
        ident       : 접속 클라이언트 유저 이름을 확인
        pam         : 서비스 인증

	ex) host all all 0.0.0.0/0 md5

pg_ident.conf